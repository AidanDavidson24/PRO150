@{
    Random rand = new Random();
    //int PKID = rand.Next(1,1080);
    int PKID = 1;

    if (true)
    {
        PokemonElements pokemon = PokemonElements.LoadPokemon(PKID);

        <h1>@pokemon.Name</h1>
        <br />
        <h1>@pokemon.Moves[0].Move.Name</h1>

        MoveElements move = MoveElements.LoadMove(PokemonElements.LoadPokemon(PKID).Moves[0].Move);
        <h1>@move.Accuracy</h1>
        <h1>@move.PP</h1>
        <h1>@move.Priority</h1>
        <h1>@move.Meta.Healing</h1>

        <br />
        <h1>@pokemon.Abilities[0].Ability.Name</h1>
        AbilityElements ability = AbilityElements.LoadAbility(PokemonElements.LoadPokemon(PKID).Abilities[0].Ability);
        <h1>@ability.Effect_Entries[0].Effect</h1>


    if(PokemonElements.LoadPokemon(PKID).Types.Count == 2)
    {
        <h1>@PokemonElements.LoadPokemon(PKID).Types[0].Type.Name</h1>
        <h1>@PokemonElements.LoadPokemon(PKID).Types[1].Type.Name</h1>
    }
    else
    {
        <h1>@PokemonElements.LoadPokemon(PKID).Types[0].Type.Name</h1>
    }


    /*PokeApiClient pokeClient = new PokeApiClient();
     * 
    int IVH = rand.Next(0,31);
    int EV = rand.Next(0,255);
    int level = rand.Next(1,100);
    int HP = 1;

    //Gets the first move in the list of moves a pokemon can learn
    //(PokemonElements.LoadPokemon(PKID).Moves[0].Move)

}